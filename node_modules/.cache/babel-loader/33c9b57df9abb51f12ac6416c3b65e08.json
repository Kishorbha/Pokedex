{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kisho\\\\OneDrive\\\\Desktop\\\\projects\\\\pokedex\\\\src\\\\containers\\\\PokemonDetails.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { POKEMON_API_URL } from \"../api\";\nimport { CircularProgress, Box, withStyles, Typography, Grid, Button } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { connect } from \"react-redux\";\nimport { toggleFavourite } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  pokedexContainer: {\n    height: \"85vh\",\n    backgroundColor: \"lightblue\",\n    color: \"black\",\n    marginTop: 70,\n    textAlign: \"center\",\n    borderRadius: 5,\n    paddingTop: 30\n  },\n  textTitle: {\n    textTransform: \"upperCase\",\n    fontFamily: \"Fantasy\"\n  },\n  pokemonImage: {\n    width: \"170px\",\n    height: \"170px\"\n  },\n  pokemonInfoContainer: {\n    bottom: 60,\n    position: \"absolute\",\n    width: \"90%\"\n  },\n  seperator: {\n    height: \"0.01mm\",\n    width: \"95%\"\n  },\n  favourite: {\n    height: 50,\n    width: 50,\n    marginTop: 15\n  },\n  text: {\n    fontSize: 30\n  }\n});\n\nclass PokemonDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      id\n    } = match === null || match === void 0 ? void 0 : match.params;\n    axios.get(POKEMON_API_URL + \"/\" + id).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        this.setState({\n          pokemon: response.data\n        });\n      }\n    });\n  }\n\n  favouriteChecker(pokemon) {\n    var _this$props$favourite;\n\n    let found = false;\n    (_this$props$favourite = this.props.favourites) === null || _this$props$favourite === void 0 ? void 0 : _this$props$favourite.map(p => {\n      if (p.id === pokemon.id) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      pokemon\n    } = this.state;\n\n    if (pokemon) {\n      const {\n        name,\n        sprites,\n        height,\n        weight,\n        types\n      } = pokemon;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.pokedexContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.textTitle,\n            variant: \"h1\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.pokemonImage,\n            src: sprites.front_default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.pokemonInfoContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: classes.seperator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.favourite,\n                  onClick: () => this.props.toggleFavourite(pokemon),\n                  children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n                    style: {\n                      color: this.favouriteChecker(pokemon) ? \"red\" : \"white\",\n                      fontSize: 50\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.text,\n                  children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this), name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.text,\n                  children: [\"Height\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this), height, \"m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.text,\n                  children: [\"Weight\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this), weight, \"kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), types.map(pokemonType => {\n                const {\n                  name\n                } = pokemonType.type;\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.text,\n                    children: [\"Type\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 25\n                    }, this), name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  favourites: state.favourites\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFavourite: pokemon => dispatch(toggleFavourite(pokemon))\n});\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(PokemonDetails));","map":{"version":3,"sources":["C:/Users/kisho/OneDrive/Desktop/projects/pokedex/src/containers/PokemonDetails.js"],"names":["React","Component","axios","POKEMON_API_URL","CircularProgress","Box","withStyles","Typography","Grid","Button","FavoriteIcon","connect","toggleFavourite","styles","theme","pokedexContainer","height","backgroundColor","color","marginTop","textAlign","borderRadius","paddingTop","textTitle","textTransform","fontFamily","pokemonImage","width","pokemonInfoContainer","bottom","position","seperator","favourite","text","fontSize","PokemonDetails","constructor","props","state","pokemon","componentDidMount","match","id","params","get","then","response","status","setState","data","favouriteChecker","found","favourites","map","p","render","classes","name","sprites","weight","types","front_default","pokemonType","type","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,SACEC,gBADF,EAEEC,GAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,MANF,QAOO,mBAPP;AAQA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,eAAe,EAAE,WAFD;AAGhBC,IAAAA,KAAK,EAAE,OAHS;AAIhBC,IAAAA,SAAS,EAAE,EAJK;AAKhBC,IAAAA,SAAS,EAAE,QALK;AAMhBC,IAAAA,YAAY,EAAE,CANE;AAOhBC,IAAAA,UAAU,EAAE;AAPI,GADO;AAUzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,WADN;AAETC,IAAAA,UAAU,EAAE;AAFH,GAVc;AAczBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,OADK;AAEZX,IAAAA,MAAM,EAAE;AAFI,GAdW;AAkBzBY,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,MAAM,EAAE,EADY;AAEpBC,IAAAA,QAAQ,EAAE,UAFU;AAGpBH,IAAAA,KAAK,EAAE;AAHa,GAlBG;AAuBzBI,EAAAA,SAAS,EAAE;AACTf,IAAAA,MAAM,EAAE,QADC;AAETW,IAAAA,KAAK,EAAE;AAFE,GAvBc;AA2BzBK,EAAAA,SAAS,EAAE;AACThB,IAAAA,MAAM,EAAE,EADC;AAETW,IAAAA,KAAK,EAAE,EAFE;AAGTR,IAAAA,SAAS,EAAE;AAHF,GA3Bc;AAgCzBc,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAhCmB,CAAZ,CAAf;;AAqCA,MAAMC,cAAN,SAA6BlC,SAA7B,CAAuC;AACrCmC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKJ,KAAvB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAASD,KAAT,aAASA,KAAT,uBAASA,KAAK,CAAEE,MAAtB;AACAzC,IAAAA,KAAK,CAAC0C,GAAN,CAAUzC,eAAe,GAAG,GAAlB,GAAwBuC,EAAlC,EAAsCG,IAAtC,CAA4CC,QAAD,IAAc;AACvD,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,aAAKC,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAEO,QAAQ,CAACG;AAApB,SAAd;AACD;AACF,KAJD;AAKD;;AAEDC,EAAAA,gBAAgB,CAACX,OAAD,EAAU;AAAA;;AACxB,QAAIY,KAAK,GAAG,KAAZ;AACA,kCAAKd,KAAL,CAAWe,UAAX,gFAAuBC,GAAvB,CAA4BC,CAAD,IAAO;AAChC,UAAIA,CAAC,CAACZ,EAAF,KAASH,OAAO,CAACG,EAArB,EAAyB;AACvBS,QAAAA,KAAK,GAAG,IAAR;AACD;AACF,KAJD;AAKA,WAAOA,KAAP;AACD;;AACDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKnB,KAAzB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKD,KAAzB;;AACA,QAAIC,OAAJ,EAAa;AACX,YAAM;AAAEkB,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiB1C,QAAAA,MAAjB;AAAyB2C,QAAAA,MAAzB;AAAiCC,QAAAA;AAAjC,UAA2CrB,OAAjD;AACA,0BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEiB,OAAO,CAACzC,gBAAxB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEyC,OAAO,CAACjC,SAA/B;AAA0C,YAAA,OAAO,EAAC,IAAlD;AAAA,sBACGkC;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAED,OAAO,CAAC9B,YAAxB;AAAsC,YAAA,GAAG,EAAEgC,OAAO,CAACG;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAEL,OAAO,CAAC5B,oBAAxB;AAAA,oCACE;AAAI,cAAA,SAAS,EAAE4B,OAAO,CAACzB;AAAvB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,SAAS,EAAEyB,OAAO,CAACxB,SADrB;AAEE,kBAAA,OAAO,EAAE,MAAM,KAAKK,KAAL,CAAWzB,eAAX,CAA2B2B,OAA3B,CAFjB;AAAA,yCAIE,QAAC,YAAD;AACE,oBAAA,KAAK,EAAE;AACLrB,sBAAAA,KAAK,EAAE,KAAKgC,gBAAL,CAAsBX,OAAtB,IAAiC,KAAjC,GAAyC,OAD3C;AAELL,sBAAAA,QAAQ,EAAE;AAFL;AADT;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAcE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAEsB,OAAO,CAACvB,IAA/B;AAAA,kDAEE;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGGwB,IAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAdF,eAqBE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAED,OAAO,CAACvB,IAA/B;AAAA,oDAEE;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGGjB,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBArBF,eA4BE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAEwC,OAAO,CAACvB,IAA/B;AAAA,oDAEE;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGG0B,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA5BF,EAmCGC,KAAK,CAACP,GAAN,CAAWS,WAAD,IAAiB;AAC1B,sBAAM;AAAEL,kBAAAA;AAAF,oBAAWK,WAAW,CAACC,IAA7B;AACA,oCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAA,yCACE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAEP,OAAO,CAACvB,IAA/B;AAAA,oDAEE;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGGwB,IAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF;AASD,eAXA,CAnCH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AA6DD,KA/DD,MA+DO;AACL,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAhGoC;;AAmGvC,MAAMO,eAAe,GAAI1B,KAAD,KAAY;AAClCc,EAAAA,UAAU,EAAEd,KAAK,CAACc;AADgB,CAAZ,CAAxB;;AAIA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCtD,EAAAA,eAAe,EAAG2B,OAAD,IAAa2B,QAAQ,CAACtD,eAAe,CAAC2B,OAAD,CAAhB;AADE,CAAf,CAA3B;;AAIA,eAAejC,UAAU,CAACO,MAAD,CAAV,CACbF,OAAO,CAACqD,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C9B,cAA7C,CADa,CAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport { POKEMON_API_URL } from \"../api\"\r\nimport {\r\n  CircularProgress,\r\n  Box,\r\n  withStyles,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\"\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\r\nimport { connect } from \"react-redux\"\r\nimport { toggleFavourite } from \"../redux/actions\"\r\n\r\nconst styles = (theme) => ({\r\n  pokedexContainer: {\r\n    height: \"85vh\",\r\n    backgroundColor: \"lightblue\",\r\n    color: \"black\",\r\n    marginTop: 70,\r\n    textAlign: \"center\",\r\n    borderRadius: 5,\r\n    paddingTop: 30,\r\n  },\r\n  textTitle: {\r\n    textTransform: \"upperCase\",\r\n    fontFamily: \"Fantasy\",\r\n  },\r\n  pokemonImage: {\r\n    width: \"170px\",\r\n    height: \"170px\",\r\n  },\r\n  pokemonInfoContainer: {\r\n    bottom: 60,\r\n    position: \"absolute\",\r\n    width: \"90%\",\r\n  },\r\n  seperator: {\r\n    height: \"0.01mm\",\r\n    width: \"95%\",\r\n  },\r\n  favourite: {\r\n    height: 50,\r\n    width: 50,\r\n    marginTop: 15,\r\n  },\r\n  text: {\r\n    fontSize: 30,\r\n  },\r\n})\r\n\r\nclass PokemonDetails extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      pokemon: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props\r\n    const { id } = match?.params\r\n    axios.get(POKEMON_API_URL + \"/\" + id).then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        this.setState({ pokemon: response.data })\r\n      }\r\n    })\r\n  }\r\n\r\n  favouriteChecker(pokemon) {\r\n    let found = false\r\n    this.props.favourites?.map((p) => {\r\n      if (p.id === pokemon.id) {\r\n        found = true\r\n      }\r\n    })\r\n    return found\r\n  }\r\n  render() {\r\n    const { classes } = this.props\r\n    const { pokemon } = this.state\r\n    if (pokemon) {\r\n      const { name, sprites, height, weight, types } = pokemon\r\n      return (\r\n        <Box>\r\n          <Box className={classes.pokedexContainer}>\r\n            <Typography className={classes.textTitle} variant=\"h1\">\r\n              {name}\r\n            </Typography>\r\n            <img className={classes.pokemonImage} src={sprites.front_default} />\r\n            <Box className={classes.pokemonInfoContainer}>\r\n              <hr className={classes.seperator} />\r\n              <Grid container>\r\n                <Grid item md={1}>\r\n                  <Button\r\n                    className={classes.favourite}\r\n                    onClick={() => this.props.toggleFavourite(pokemon)}\r\n                  >\r\n                    <FavoriteIcon\r\n                      style={{\r\n                        color: this.favouriteChecker(pokemon) ? \"red\" : \"white\",\r\n                        fontSize: 50,\r\n                      }}\r\n                    />\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item md={2}>\r\n                  <Typography className={classes.text}>\r\n                    Name\r\n                    <br />\r\n                    {name}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item md={2}>\r\n                  <Typography className={classes.text}>\r\n                    Height\r\n                    <br />\r\n                    {height}m\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item md={2}>\r\n                  <Typography className={classes.text}>\r\n                    Weight\r\n                    <br />\r\n                    {weight}kg\r\n                  </Typography>\r\n                </Grid>\r\n                {types.map((pokemonType) => {\r\n                  const { name } = pokemonType.type\r\n                  return (\r\n                    <Grid item md={2}>\r\n                      <Typography className={classes.text}>\r\n                        Type\r\n                        <br />\r\n                        {name}\r\n                      </Typography>\r\n                    </Grid>\r\n                  )\r\n                })}\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )\r\n    } else {\r\n      return <CircularProgress />\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favourites: state.favourites,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleFavourite: (pokemon) => dispatch(toggleFavourite(pokemon)),\r\n})\r\n\r\nexport default withStyles(styles)(\r\n  connect(mapStateToProps, mapDispatchToProps)(PokemonDetails)\r\n)\r\n"]},"metadata":{},"sourceType":"module"}